<Window x:Class="AehnlichDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:conv="clr-namespace:AehnlichLibViewModels.Converters;assembly=AehnlichLibViewModels"

        xmlns:ctrl="clr-namespace:AehnlichViewLib.Controls;assembly=AehnlichViewLib"
        xmlns:usctrl="clr-namespace:AehnlichLibViewModels.Views;assembly=AehnlichLibViewModels"
        xmlns:icon_src="clr-namespace:AehnlichViewLib.Themes;assembly=AehnlichViewLib"
        xmlns:reskeys="clr-namespace:AehnlichViewLib.Themes;assembly=AehnlichViewLib"
        
        mc:Ignorable="d"
        Title="Ähnlich" Height="450" Width="800">
    
    <Grid Margin="3">
        <Grid.Resources>
            <conv:MultiParToParConverter x:Key="MultiParToParConverter"/>
            <conv:BoolToVisibilityPropConverter x:Key="BoolToVisibilityPropConverter"/>
            <conv:InlineDilaogToVisibilityPropConverter x:Key="InlineDilaogToVisibilityPropConverter"/>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Margin="0,0,0,3" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <ToolBar Grid.Column="0" VerticalAlignment="Center"
                     Background="Transparent"
                     ToolBarTray.IsLocked="True"
                     MinHeight="16"
                     >
                <Button
                    Command="{Binding OpenFileFromActiveViewCommand}"
                    ToolTip="Open File"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    MinHeight="16" MinWidth="16"
                    Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                    Margin="0,0,3,0"
                    >
                    <Button.Background>
                        <ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_OpenFileKey}}"/>
                    </Button.Background>
                </Button>

                <Separator />
                
                <Button
                    Command="{Binding CopyTextSelectionFromActiveViewCommand}"
                    ToolTip="Copy Text"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    MinHeight="16" MinWidth="16"
                    Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                    Margin="0,0,3,0"
                    >
                    <Button.Background>
                        <ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_CopyKey}}"/>
                    </Button.Background>
                </Button>

                <Button
                    Command="{Binding FindTextCommand}"
                    ToolTip="Find"
                    ToolTipService.IsEnabled="True"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    MinHeight="16" MinWidth="16"
                    Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                    Margin="0,0,3,0"
                    >
                    <Button.Background>
                        <ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_FindKey}}"/>
                    </Button.Background>
                </Button>

                <Button
                    Command="{Binding GotoLineCommand}"
                    ToolTip="Goto Line"
                    ToolTipService.IsEnabled="True"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    MinHeight="16" MinWidth="16"
                    Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                    Margin="0,0,3,0"
                    >
                    <Button.Background>
                        <ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_GotoLineKey}}"/>
                    </Button.Background>
                </Button>
                
                <Separator />

                <Button
                    Command="{Binding DiffCtrl.GoToFirstDifferenceCommand}"
                    ToolTip="Go to First Difference"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    MinHeight="16" MinWidth="16"
                    Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                    Margin="0,0,3,0"
                    >
                     <Button.Background>
                        <ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_GotoTopKey}}"/>
                    </Button.Background>
                </Button>

                <Button
                    Command="{Binding DiffCtrl.GoToNextDifferenceCommand}"
                    ToolTip="Go to Next Difference"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    MinHeight="16" MinWidth="16"
                    Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                    Margin="0,0,3,0"
                    >
                    <Button.Background>
                        <ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_GotoNextKey}}"/>
                    </Button.Background>
                </Button>

                <Button
                    Command="{Binding DiffCtrl.GoToPrevDifferenceCommand}"
                    ToolTip="Go to Previous Difference"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    MinHeight="16" MinWidth="16"
                    Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                    Margin="0,0,3,0"
                    >
                    <Button.Background>
                        <ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_GotoPrevKey}}"/>
                    </Button.Background>
                </Button>

                <Button
                    Command="{Binding DiffCtrl.GoToLastDifferenceCommand}"
                    ToolTip="Go to Last Difference"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    MinHeight="16" MinWidth="16"
                    Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                    Margin="0,0,3,0"
                    >
                    <Button.Background>
                        <ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_GotoBottomKey}}"/>
                    </Button.Background>
                </Button>

                <Separator Margin="3,0,3,0"/>
                
                <Button
                    Command="{Binding CompareFilesCommand}"
                    ToolTip="Recompare"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    MinHeight="16" MinWidth="16"
                    Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                    Margin="0,0,3,0"
                    >
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource MultiParToParConverter}">
                            <Binding Path="FilePathA" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                            <Binding Path="FilePathB" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                    <Button.Background>
                        <ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_RefreshKey}}"/>
                    </Button.Background>
                </Button>

                <Separator Margin="0,0,3,0"
                           Visibility="{Binding DiffCtrl.IsDiffDataAvailable,Converter={StaticResource BoolToVisibilityPropConverter}}"
                           />

                <Border BorderBrush="Gray" BorderThickness="1" Margin="0,0,3,0"
                        Background="{DynamicResource {x:Static reskeys:ResourceKeys.ColorBackgroundContextBrushKey}}"
                        >
                    <Grid ToolTip="Changed"
                      HorizontalAlignment="Stretch"
                      MinHeight="16" MinWidth="16"
                      Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"                        
                    >
                        <Grid.Background>
                            <ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_ChangedKey}}"/>
                        </Grid.Background>
                    </Grid>
                </Border>

                <Border BorderBrush="Gray" BorderThickness="1" Margin="0,0,3,0"
                        Background="{DynamicResource {x:Static reskeys:ResourceKeys.ColorBackgroundDeletedBrushKey}}"
                        >
                    <Grid ToolTip="Deleted"
                      HorizontalAlignment="Stretch"
                      MinHeight="16" MinWidth="16"
                      Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}">
                    <Grid.Background>
                        <ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_DeletedKey}}"/>
                    </Grid.Background>
                </Grid>
                    
                </Border>

                <Border BorderBrush="Gray" BorderThickness="1" Margin="0,0,3,0"
                        Background="{DynamicResource {x:Static reskeys:ResourceKeys.ColorBackgroundAddedBrushKey}}"
                        >
                    <Grid ToolTip="Inserted"
                      HorizontalAlignment="Stretch"
                      MinHeight="16" MinWidth="16"
                      Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"                        
                    >
                        <Grid.Background>
                            <ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_AddedKey}}"/>
                        </Grid.Background>
                    </Grid>
                </Border>

                <Separator Margin="0,0,3,0"
                           Visibility="{Binding DiffCtrl.IsDiffDataAvailable,Converter={StaticResource BoolToVisibilityPropConverter}}"
                           />

                <TextBlock
                    DataContext="{Binding DiffCtrl}"
                    Text="{Binding Similarity_Text}"
                    Margin="0,0,3,0"
                    VerticalAlignment="Center"
                    ToolTip="Similarity"
                />

                <Separator Margin="0,0,3,0"
                           Visibility="{Binding DiffCtrl.IsDiffDataAvailable,Converter={StaticResource BoolToVisibilityPropConverter}}"
                           />

                <!-- IsDiffDataAvailable -->
                <StackPanel Orientation="Horizontal"
                            VerticalAlignment="Center"
                            DataContext="{Binding DiffCtrl}"
                            Visibility="{Binding IsDiffDataAvailable,Converter={StaticResource BoolToVisibilityPropConverter}}"
                            >
                    <TextBlock Margin="0,0,3,0" Text="Ln:" ToolTip="Current Line">
                        <TextBlock Text="{Binding SynchronizedLine,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                    </TextBlock>
                    <TextBlock Margin="0,0,3,0" Text=", Col:" ToolTip="Current Column">
                        <TextBlock Text="{Binding SynchronizedColumn,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                    </TextBlock>
                </StackPanel>
            </ToolBar>
            
            <!-- Debugging Values -->
            <StackPanel Grid.Column="1" Orientation="Horizontal" Visibility="Collapsed">
                <TextBlock
                    Margin="3" VerticalAlignment="Center"
                    Text="{Binding ElementName=OverviewSlider,Path=NumberOfTextLinesInViewPort}"
                    ToolTip="NumberOfTextLinesInViewPort"
                />

                <TextBlock
                    Margin="3" VerticalAlignment="Center"
                    Text="{Binding ElementName=OverviewSlider,Path=Value}"
                    ToolTip="Value"
                />

                <TextBlock
                    Margin="3" VerticalAlignment="Center"
                    Text="{Binding ElementName=OverviewSlider,Path=Minimum}"
                    ToolTip="Minimum"
                />

                <TextBlock
                    Margin="3" VerticalAlignment="Center"
                    Text="{Binding ElementName=OverviewSlider,Path=Maximum}"
                    ToolTip="Maximum"
                />

            </StackPanel>
        </Grid>

        <Grid Grid.Column="0" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="0" Margin="3,0,3,3"
                  Visibility="{Binding InlineDialog, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InlineDilaogToVisibilityPropConverter}}"
              >
                <usctrl:GotoControl DataContext="{Binding GotoLineController}"
                />
            </Grid>

            <ctrl:Overview Grid.Column="0" Grid.Row="0" Grid.RowSpan="3" Margin="3"
                           Width="30"
                           Name="OverviewSlider"
                           ItemsSource="{Binding DiffCtrl.ViewA.DocLineDiffs}"
                           
                           Value="{Binding OverViewValue, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                           NumberOfTextLinesInViewPort="{Binding NumberOfTextLinesInViewPort}"
                           ValueChangedCommand="{Binding OverviewValueChangedCommand,Mode=OneWay}"
                           >
                <!-- NumberOfLines -->
                <!--ctrl:Overview.ToolTip>
                    <TextBlock Text="{Binding NumberOfLines}"/>
                </ctrl:Overview.ToolTip-->
            </ctrl:Overview>

            <ctrl:DiffControl Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="2"
                              Name="DiffCtrl"
                              LeftFileName="{Binding FilePathA, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                              RightFileName="{Binding FilePathB, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                              ViewPortChangedCommand="{Binding ViewPortChangedCommand}"
                              DiffViewOptions="{Binding DiffCtrl.DiffViewOptions,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                              
                              Margin="3,0,3,3"/>
        </Grid>

        <GridSplitter
                Grid.Column="0" Grid.Row="2"
                HorizontalAlignment="Stretch"
                Background="Transparent"
                Height="6" />

        <!-- ViewLineDiff -->
        <ctrl:DiffView
            Grid.Column="0" Grid.Row="3" Margin="3"
            DataContext="{Binding DiffCtrl.ViewLineDiff}"
            Document="{Binding Document, UpdateSourceTrigger=PropertyChanged}"
            ItemsSource="{Binding DocLineDiffs}"
            ShowLineNumbers="False"
			IsModified="{Binding Path=IsDirty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            IsReadOnly="True"

            Options="{Binding ElementName=DiffCtrl,Path=DiffViewOptions,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
            
            Column="{Binding Column, Mode=OneWayToSource}"
            Line="{Binding Line, Mode=OneWayToSource}"
            TextBoxController="{Binding TxtControl}"
            EditorCurrentLineBackground="{x:Null}"
            EditorCurrentLineBorderThickness="0"
            
            Focusable="False"

            FontFamily="Consolas"
            FontSize="12pt"
            HorizontalScrollBarVisibility="Visible"
            VerticalScrollBarVisibility="Visible"
            />

    </Grid>
</Window>
