<UserControl
	x:Class="AehnlichViewModelsLib.Views.FileDiffView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:HL="clr-namespace:HL.Manager;assembly=HL"
	xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
	xmlns:behav="clr-namespace:AehnlichViewModelsLib.Behaviors"
	xmlns:conv="clr-namespace:AehnlichViewLib.Converters;assembly=AehnlichViewLib"
	xmlns:conv1="clr-namespace:AehnlichViewModelsLib.Converters"
	xmlns:ctrl="clr-namespace:AehnlichViewLib.Controls;assembly=AehnlichViewLib"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:dlgenum="clr-namespace:AehnlichViewModelsLib.Enums"
	xmlns:icon_src="clr-namespace:AehnlichViewLib.Themes;assembly=AehnlichViewLib"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:range="clr-namespace:AehnlichViewLib.Controls.Overview;assembly=AehnlichViewLib"
	xmlns:reskeys="clr-namespace:AehnlichViewLib.Themes;assembly=AehnlichViewLib"
	xmlns:sc="clr-namespace:SuggestBoxLib;assembly=SuggestBoxLib"
	xmlns:usctrl="clr-namespace:AehnlichViewModelsLib.Views"
	xmlns:vms="clr-namespace:AehnlichViewModelsLib.Interfaces"
	d:DesignHeight="450"
	d:DesignWidth="800"
	mc:Ignorable="d">
	<Grid>
		<Grid.Resources>
			<conv1:InlineDilaogToVisibilityPropConverter x:Key="InlineDilaogToVisibilityPropConverter" />
			<conv1:CompareTypeToBoolConverter x:Key="CompareTypeToBoolConverter" />
			<conv1:CompareTypeToVisibilityConverter x:Key="CompareTypeToVisibilityConverter" />
		</Grid.Resources>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<Grid
			xmlns:dlg="clr-namespace:AehnlichViewModelsLib.ViewModels.Dialogs"
			Grid.Row="0"
			Grid.Column="0"
			Margin="3,0,3,3"
			Visibility="{Binding InlineDialog, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InlineDilaogToVisibilityPropConverter}}">
			<ContentControl Margin="12" Content="{Binding SelectedDialogItem, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
				<ContentControl.ContentTemplateSelector>
					<dlg:DialogtTemplateSelector>
						<dlg:DialogtTemplateSelector.GotoLineDialog>
							<DataTemplate DataType="x:Type dlg:IGotoLineControllerViewModel">
								<usctrl:GotoControl />
							</DataTemplate>
						</dlg:DialogtTemplateSelector.GotoLineDialog>
						<dlg:DialogtTemplateSelector.OptionsDialog>
							<DataTemplate DataType="x:Type dlg:IOptionsControllerViewModel">
								<usctrl:OptionsControl />
							</DataTemplate>
						</dlg:DialogtTemplateSelector.OptionsDialog>
					</dlg:DialogtTemplateSelector>
				</ContentControl.ContentTemplateSelector>
			</ContentControl>
		</Grid>

		<Grid Grid.Row="1">
			<Grid.Resources>
				<conv:BoolToVisibilityPropConverter
					x:Key="ProgressVisibilityPropConverter"
					FalseValue="Visible"
					TrueValue="Collapsed" />
				<conv:BoolToVisibilityPropConverter x:Key="BoolToVisibilityPropConverter" />
				<conv:BooleanInvertConverter x:Key="BooleanInvertConverter" />
				<conv1:MultiParToParConverter x:Key="MultiParToParConverter" />
				<conv1:DiffContextToVisibilityPropConverter x:Key="DiffContextToVisibilityPropConverter" />
				<conv1:DiffContextToColorPropConverter
					x:Key="DiffContextToColorPropConverter"
					AddedValue="{DynamicResource {x:Static reskeys:ResourceKeys.ColorBackgroundAddedBrushKey}}"
					ContextValue="{DynamicResource {x:Static reskeys:ResourceKeys.ColorBackgroundContextBrushKey}}"
					DeletedValue="{DynamicResource {x:Static reskeys:ResourceKeys.ColorBackgroundDeletedBrushKey}}" />
			</Grid.Resources>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="4*" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<Grid Grid.ColumnSpan="2" Margin="0,0,0,3">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<StackPanel
					Grid.Column="0"
					MinHeight="16"
					VerticalAlignment="Center"
					Background="Transparent"
					Orientation="Horizontal">
					<Button
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
						MinWidth="16"
						MinHeight="16"
						Margin="0,0,3,0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{Binding OpenFileFromActiveViewCommand}"
						ToolTip="Open File">
						<Image
							Height="16"
							SnapsToDevicePixels="True"
							Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_OpenFileKey}}" />
					</Button>

					<Separator />

					<Button
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
						MinWidth="16"
						MinHeight="16"
						Margin="0,0,3,0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{Binding CopyTextSelectionFromActiveViewCommand}"
						ToolTip="Copy Text">
						<Image
							Height="16"
							SnapsToDevicePixels="True"
							Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_CopyKey}}" />
					</Button>

					<Button
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
						MinWidth="16"
						MinHeight="16"
						Margin="0,0,3,0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{Binding FindTextCommand}"
						ToolTip="Find"
						ToolTipService.IsEnabled="True">
						<Image
							Height="16"
							SnapsToDevicePixels="True"
							Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_FindKey}}" />
					</Button>

					<Button
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
						MinWidth="16"
						MinHeight="16"
						Margin="0,0,3,0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{Binding InlineDialogCommand}"
						CommandParameter="{x:Static dlgenum:InlineDialogMode.Goto}"
						ToolTip="Goto Line"
						ToolTipService.IsEnabled="True">
						<Image
							Height="16"
							SnapsToDevicePixels="True"
							Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_GotoLineKey}}" />
					</Button>

					<Separator />

					<Button
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
						MinWidth="16"
						MinHeight="16"
						Margin="0,0,3,0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{Binding DiffCtrl.GoToFirstDifferenceCommand}"
						ToolTip="Go to First Difference">
						<Image
							Height="16"
							SnapsToDevicePixels="True"
							Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_GotoTopKey}}" />
					</Button>

					<Button
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
						MinWidth="16"
						MinHeight="16"
						Margin="0,0,3,0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{Binding DiffCtrl.GoToNextDifferenceCommand}"
						ToolTip="Go to Next Difference">
						<Image
							Height="16"
							SnapsToDevicePixels="True"
							Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_GotoNextKey}}" />
					</Button>

					<Button
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
						MinWidth="16"
						MinHeight="16"
						Margin="0,0,3,0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{Binding DiffCtrl.GoToPrevDifferenceCommand}"
						ToolTip="Go to Previous Difference">
						<Image
							Height="16"
							SnapsToDevicePixels="True"
							Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_GotoPrevKey}}" />
					</Button>

					<Button
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
						MinWidth="16"
						MinHeight="16"
						Margin="0,0,3,0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{Binding DiffCtrl.GoToLastDifferenceCommand}"
						ToolTip="Go to Last Difference">
						<Image
							Height="16"
							SnapsToDevicePixels="True"
							Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_GotoBottomKey}}" />
					</Button>

					<Separator Margin="3,0,3,0" />

					<Button
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
						MinWidth="16"
						MinHeight="16"
						Margin="0,0,3,0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{Binding CompareFilesCommand}"
						ToolTip="Recompare">
						<Button.CommandParameter>
							<MultiBinding Converter="{StaticResource MultiParToParConverter}">
								<Binding
									Mode="OneWay"
									Path="FilePathA"
									UpdateSourceTrigger="PropertyChanged" />
								<Binding
									Mode="OneWay"
									Path="FilePathB"
									UpdateSourceTrigger="PropertyChanged" />
							</MultiBinding>
						</Button.CommandParameter>

						<Image Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_RefreshKey}}" />
					</Button>

					<Button
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
						MinWidth="16"
						MinHeight="16"
						Margin="0,0,3,0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{Binding InlineDialogCommand}"
						CommandParameter="{x:Static dlgenum:InlineDialogMode.Options}"
						ToolTip="Options"
						ToolTipService.IsEnabled="True">
						<Image
							Height="16"
							SnapsToDevicePixels="True"
							Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_SettingsKey}}" />
					</Button>

					<Button
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
						MinWidth="16"
						MinHeight="16"
						Margin="0,0,3,0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{Binding DiffCtrl.HighlightingDefintionOffCommand}"
						ToolTip="Switch syntax highlighting off"
						ToolTipService.IsEnabled="True">
						<Image
							Height="16"
							SnapsToDevicePixels="True"
							Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_HighlightingKey}}" />
					</Button>



					<Separator Margin="3,0,3,0" Visibility="{Binding DiffCtrl.IsDiffDataAvailable, Converter={StaticResource BoolToVisibilityPropConverter}}" />

					<TextBlock
						Margin="0,0,6,0"
						VerticalAlignment="Center"
						DataContext="{Binding DiffCtrl}"
						Text="{Binding IsComparedAs}"
						ToolTip="Applied type of comparison" />

					<Border
						Margin="0,0,3,0"
						Background="{DynamicResource {x:Static reskeys:ResourceKeys.ColorBackgroundContextBrushKey}}"
						BorderBrush="Gray"
						BorderThickness="1">
						<Grid
							Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
							MinWidth="16"
							MinHeight="16"
							HorizontalAlignment="Stretch">
							<Grid.ToolTip>
								<TextBlock Text="{Binding DiffCtrl.CountChanges, StringFormat=Changed: {0}}" />
							</Grid.ToolTip>

							<Image SnapsToDevicePixels="True" Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_ChangedKey}}" />
						</Grid>
					</Border>

					<Border
						Margin="0,0,3,0"
						Background="{DynamicResource {x:Static reskeys:ResourceKeys.ColorBackgroundDeletedBrushKey}}"
						BorderBrush="Gray"
						BorderThickness="1">
						<Grid
							Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
							MinWidth="16"
							MinHeight="16"
							HorizontalAlignment="Stretch">
							<Grid.ToolTip>
								<TextBlock Text="{Binding DiffCtrl.CountDeletes, StringFormat=Deleted: {0}}" />
							</Grid.ToolTip>

							<Image SnapsToDevicePixels="True" Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_DeletedKey}}" />
						</Grid>

					</Border>

					<Border
						Margin="0,0,3,0"
						Background="{DynamicResource {x:Static reskeys:ResourceKeys.ColorBackgroundAddedBrushKey}}"
						BorderBrush="Gray"
						BorderThickness="1">
						<Grid
							Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
							MinWidth="16"
							MinHeight="16"
							HorizontalAlignment="Stretch">
							<Grid.ToolTip>
								<TextBlock Text="{Binding DiffCtrl.CountInserts, StringFormat=Added: {0}}" />
							</Grid.ToolTip>

							<Image SnapsToDevicePixels="True" Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_AddedKey}}" />
						</Grid>
					</Border>

					<Separator Margin="3,0,3,0" Visibility="{Binding DiffCtrl.IsDiffDataAvailable, Converter={StaticResource BoolToVisibilityPropConverter}}" />

					<TextBlock
						Margin="0,0,3,0"
						VerticalAlignment="Center"
						DataContext="{Binding DiffCtrl}"
						Text="{Binding Similarity_Text}"
						ToolTip="Similarity" />

					<Separator Margin="0,0,3,0" Visibility="{Binding DiffCtrl.IsDiffDataAvailable, Converter={StaticResource BoolToVisibilityPropConverter}}" />

					<!--  IsDiffDataAvailable  -->
					<StackPanel
						VerticalAlignment="Center"
						DataContext="{Binding DiffCtrl}"
						Orientation="Horizontal"
						Visibility="{Binding IsDiffDataAvailable, Converter={StaticResource BoolToVisibilityPropConverter}}">
						<TextBlock
							Margin="0,0,3,0"
							Text="Ln:"
							ToolTip="Current Line">
							<TextBlock Text="{Binding SynchronizedLine, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
						</TextBlock>
						<TextBlock
							Margin="0,0,3,0"
							Text=", Col:"
							ToolTip="Current Column">
							<TextBlock Text="{Binding SynchronizedColumn, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
						</TextBlock>
					</StackPanel>
				</StackPanel>

				<!--  Debugging Values  -->
				<StackPanel
					Grid.Column="1"
					Orientation="Horizontal"
					Visibility="Collapsed">
					<TextBlock
						Margin="3"
						VerticalAlignment="Center"
						Text="{Binding NumberOfTextLinesInViewPort}"
						ToolTip="AppVM.NumberOfTextLinesInViewPort" />

					<TextBlock
						Margin="3"
						VerticalAlignment="Center"
						Text="{Binding DiffCtrl.MaxNumberOfLines}"
						ToolTip="AppVM.MaxNumberOfLines" />

					<TextBlock
						Margin="3"
						VerticalAlignment="Center"
						Text="{Binding OverViewValue}"
						ToolTip="AppVM.OverViewValue" />

					<TextBlock
						Margin="3"
						VerticalAlignment="Center"
						Text="{Binding ElementName=OverviewCtrl, Path=Minimum}"
						ToolTip="OverviewCtrl.Minimum" />

					<TextBlock
						Margin="3"
						VerticalAlignment="Center"
						Text="{Binding ElementName=OverviewCtrl, Path=Maximum}"
						ToolTip="OverviewCtrl.Maximum" />

				</StackPanel>
			</Grid>

			<Grid
				Grid.Row="1"
				Grid.RowSpan="2"
				Grid.Column="0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<range:RangeScrollbar
					Name="OverviewCtrl"
					Grid.Row="0"
					Grid.Column="0"
					Width="30"
					Margin="3,0,3,3"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					DocumentSize="{Binding DiffCtrl.MaxNumberOfLines, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
					IsRepeatButtonVisible="False"
					ItemsSource="{Binding DiffCtrl.ViewA.DocLineDiffs, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
					LargeChange="{Binding NumberOfTextLinesInViewPort, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
					Maximum="{Binding DiffCtrl.MaxNumberOfLines, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
					Minimum="0"
					SmallChange="1.00"
					ViewportSize="{Binding NumberOfTextLinesInViewPort, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
					Value="{Binding OverViewValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
					<range:RangeScrollbar.ItemTemplate>
						<DataTemplate DataType="{x:Type vms:IDiffLineViewModel}">
							<Rectangle
								Name="elp"
								Width="{Binding ElementName=OverviewCtrl, Path=ActualWidth}"
								Height="1"
								Margin="0"
								HorizontalAlignment="Stretch"
								range:RangePanel.Alignment="Begin"
								range:RangePanel.Position="{Binding IndexLineNumber}"
								Fill="{Binding Context, Converter={StaticResource DiffContextToColorPropConverter}}"
								Visibility="{Binding Context, Converter={StaticResource DiffContextToVisibilityPropConverter}}" />
						</DataTemplate>
					</range:RangeScrollbar.ItemTemplate>
				</range:RangeScrollbar>

				<Grid Grid.Row="0" Grid.Column="1">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<Grid Grid.Row="0" Grid.Column="0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Name="TopColumnA" Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Name="TopColumnB" Width="*" />
						</Grid.ColumnDefinitions>

						<Grid Grid.Row="0" Grid.Column="0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="4*" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<sc:SuggestBox
								x:Name="PART_LeftFileNameTextBox"
								Grid.Column="0"
								Margin="3,0,3,3"
								VerticalAlignment="Stretch"
								behav:NewLocationRequestBehavior.Command="{Binding CompareFilesCommand}"
								Hint="Enter a file system path"
								IsEnabled="{Binding DiffProgress.IsProgressbarVisible, Converter={StaticResource BooleanInvertConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
								ItemsSource="{Binding FilePathA.ListQueryResult}"
								ShowElipses="Center"
								Text="{Binding FilePathA.FilePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								TextChangedCommand="{Binding FilePathA.SuggestTextChangedCommand}"
								ToolTipService.IsEnabled="True"
								ValidText="{Binding FilePathA.IsTextValid, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
								<sc:SuggestBox.ToolTip>
									<StackPanel>
										<TextBlock Text="{Binding FilePathA.FilePath, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
										<TextBlock Text="{Binding DiffCtrl.ViewA.FileEncodingDescription, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
									</StackPanel>
								</sc:SuggestBox.ToolTip>
							</sc:SuggestBox>

							<TextBlock
								Grid.Column="1"
								Margin="0,0,6,3"
								VerticalAlignment="Stretch"
								Text="*"
								ToolTip="There are edits without saving"
								Visibility="{Binding Path=DiffCtrl.ViewA.IsDirty, Converter={StaticResource BoolToVisibilityPropConverter}}" />

							<ComboBox
								Grid.Column="2"
								MinWidth="50"
								Margin="0,0,0,3"
								VerticalAlignment="Stretch"
								behav:SelectionChangedCommand.ChangedCommand="{Binding DiffCtrl.ViewA.HighlightingChangeCommand}"
								IsEnabled="{Binding DiffCtrl.IsComparedAs, Converter={StaticResource CompareTypeToBoolConverter}}"
								ItemsSource="{Binding Source={x:Static HL:ThemedHighlightingManager.Instance}, Path=HighlightingDefinitions}"
								SelectedItem="{Binding DiffCtrl.ViewA.HighlightingDefinition, UpdateSourceTrigger=PropertyChanged}"
								Visibility="{Binding DiffCtrl.IsComparedAs, Converter={StaticResource CompareTypeToVisibilityConverter}}" />
							<!--
								Name="highlightingComboBox"
								SelectionChanged="HighlightingComboBox_SelectionChanged"
							-->

							<ComboBox
								Grid.Column="3"
								MinWidth="50"
								Margin="0,0,0,3"
								VerticalAlignment="Stretch"
								behav:SelectionChangedCommand.ChangedCommand="{Binding ViewModeAChangeCommand}"
								IsEnabled="{Binding DiffCtrl.IsComparedAs, Converter={StaticResource CompareTypeToBoolConverter}}"
								ItemsSource="{Binding ViewModesA}"
								SelectedItem="{Binding ViewModeASelected, UpdateSourceTrigger=PropertyChanged}"
								Visibility="{Binding DiffCtrl.IsComparedAs, Converter={StaticResource CompareTypeToVisibilityConverter}}" />
						</Grid>


						<GridSplitter
							Grid.Row="0"
							Grid.Column="1"
							Width="6"
							HorizontalAlignment="Stretch"
							Background="Transparent"
							DragCompleted="MainSplitter_DragCompleted"
							DragDelta="MainSplitter_DragDelta"
							ToolTip="{Binding DiffCtrl.ToolTipText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
							ToolTipService.IsEnabled="True" />

						<Grid Grid.Row="0" Grid.Column="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="4*" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<sc:SuggestBox
								x:Name="PART_RightFileNameTextBox"
								Margin="3,0,3,3"
								VerticalAlignment="Stretch"
								behav:NewLocationRequestBehavior.Command="{Binding CompareFilesCommand}"
								Hint="Enter a file system path"
								IsEnabled="{Binding DiffProgress.IsProgressbarVisible, Converter={StaticResource BooleanInvertConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
								ItemsSource="{Binding FilePathB.ListQueryResult}"
								ShowElipses="Center"
								Text="{Binding FilePathB.FilePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								TextChangedCommand="{Binding FilePathB.SuggestTextChangedCommand}"
								ToolTipService.IsEnabled="True"
								ValidText="{Binding FilePathB.IsTextValid, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
								<sc:SuggestBox.ToolTip>
									<StackPanel>
										<TextBlock Text="{Binding FilePathB.FilePath, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
										<TextBlock Text="{Binding DiffCtrl.ViewB.FileEncodingDescription, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
									</StackPanel>
								</sc:SuggestBox.ToolTip>
							</sc:SuggestBox>

							<TextBlock
								Grid.Column="1"
								Margin="0,0,6,3"
								VerticalAlignment="Stretch"
								Text="*"
								ToolTip="There are edits without saving"
								Visibility="{Binding Path=DiffCtrl.ViewB.IsDirty, Converter={StaticResource BoolToVisibilityPropConverter}}" />

							<ComboBox
								Grid.Column="2"
								MinWidth="50"
								Margin="0,0,0,3"
								VerticalAlignment="Stretch"
								behav:SelectionChangedCommand.ChangedCommand="{Binding DiffCtrl.ViewB.HighlightingChangeCommand}"
								IsEnabled="{Binding DiffCtrl.IsComparedAs, Converter={StaticResource CompareTypeToBoolConverter}}"
								ItemsSource="{Binding Source={x:Static HL:ThemedHighlightingManager.Instance}, Path=HighlightingDefinitions}"
								SelectedItem="{Binding DiffCtrl.ViewB.HighlightingDefinition, UpdateSourceTrigger=PropertyChanged}"
								Visibility="{Binding DiffCtrl.IsComparedAs, Converter={StaticResource CompareTypeToVisibilityConverter}}" />

							<ComboBox
								Grid.Column="3"
								MinWidth="50"
								Margin="0,0,0,3"
								VerticalAlignment="Stretch"
								behav:SelectionChangedCommand.ChangedCommand="{Binding ViewModeBChangeCommand}"
								IsEnabled="{Binding DiffCtrl.IsComparedAs, Converter={StaticResource CompareTypeToBoolConverter}}"
								ItemsSource="{Binding ViewModesB}"
								SelectedItem="{Binding ViewModeBSelected, UpdateSourceTrigger=PropertyChanged}"
								Visibility="{Binding DiffCtrl.IsComparedAs, Converter={StaticResource CompareTypeToVisibilityConverter}}" />
						</Grid>
					</Grid>

					<Grid
						Grid.Row="1"
						Margin="3"
						Visibility="{Binding DiffProgress.IsProgressbarVisible, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityPropConverter}}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<Grid Grid.Row="0" Margin="3">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<Button
								Grid.Column="0"
								MinWidth="85"
								MinHeight="23"
								VerticalAlignment="Top"
								Command="{Binding CancelTextCompareCommand}"
								Content="Cancel" />

							<Grid Grid.Column="1" Margin="6,3">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<StackPanel Margin="0,3,0,0" Orientation="Horizontal">
									<TextBlock Text="We are working on it ... " />
								</StackPanel>

								<ProgressBar
									Grid.Row="1"
									Height="3"
									Margin="0,3,0,0"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Bottom"
									DataContext="{Binding DiffProgress}"
									IsIndeterminate="{Binding IsIndeterminate, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
									Maximum="{Binding MaximumProgressValue, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
									Minimum="{Binding MinimumProgressValue, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
									Value="{Binding ProgressValue, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
							</Grid>
						</Grid>
					</Grid>

					<ctrl:DiffTextView
						Name="DiffCtrl"
						Grid.Row="1"
						Margin="3,0,3,0"
						CanSyncDisplay="{Binding DiffCtrl.CanSyncDisplay, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
						ColumnWidthChanged="DiffText_ColumnWidthChanged"
						DiffViewOptions="{Binding DiffCtrl.DiffViewOptions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
						LeftDiffView="{Binding DiffCtrl.ViewA}"
						LeftFileName="{Binding FilePathA, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
						RightDiffView="{Binding DiffCtrl.ViewB}"
						RightFileName="{Binding FilePathB, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
						SetFocus="{Binding FocusControl, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
						ViewPortChangedCommand="{Binding ViewPortChangedCommand}"
						Visibility="{Binding DiffProgress.IsProgressbarVisible, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProgressVisibilityPropConverter}}" />
					<!--
						- Using equal values will freeze the GridSplitter in the control when trying to initially drag the splitter
						in the themed app?
						
						ColumnWidthA="{Binding ElementName=TopColumnA, Path=Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						ColumnWidthB="{Binding ElementName=TopColumnB, Path=Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					-->
				</Grid>
			</Grid>

			<GridSplitter
				Grid.Row="2"
				Grid.Column="0"
				Height="6"
				HorizontalAlignment="Stretch"
				Background="Transparent" />

			<!--  Horizontal ViewLineDiff with 2 text diff lines in each line  -->
			<Grid
				Grid.Row="3"
				Grid.Column="0"
				Margin="3"
				Visibility="{Binding DiffProgress.IsProgressbarVisible, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ProgressVisibilityPropConverter}}">
				<ctrl:DiffView
					Column="{Binding Column, Mode=OneWayToSource}"
					DataContext="{Binding DiffCtrl.ViewLineDiff}"
					Document="{Binding Document, UpdateSourceTrigger=PropertyChanged}"
					EditorCurrentLineBackground="{x:Null}"
					EditorCurrentLineBorderThickness="0"
					Focusable="False"
					FontFamily="Consolas"
					FontSize="12pt"
					IsModified="{Binding Path=IsDirty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					IsReadOnly="True"
					ItemsSource="{Binding DocLineDiffs}"
					Line="{Binding Line, Mode=OneWayToSource}"
					Options="{Binding ElementName=DiffCtrl, Path=DiffViewOptions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
					ShowLineNumbers="True"
					TextBoxController="{Binding TxtControl}" />
			</Grid>
		</Grid>
	</Grid>
</UserControl>
