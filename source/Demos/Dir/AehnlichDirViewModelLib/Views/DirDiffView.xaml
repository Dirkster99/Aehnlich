<UserControl
	x:Class="AehnlichDirViewModelLib.Views.DirDiffView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:aehnlichLibEnums="clr-namespace:AehnlichLib.Enums;assembly=AehnlichLib"
	xmlns:behav1="clr-namespace:AehnlichDirViewModelLib.Behaviors"
	xmlns:conv="clr-namespace:AehnlichViewLib.Converters;assembly=AehnlichViewLib"
	xmlns:conv1="clr-namespace:AehnlichDirViewModelLib.Converters"
	xmlns:ctrl="clr-namespace:AehnlichViewLib.Controls;assembly=AehnlichViewLib"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:icon_src="clr-namespace:AehnlichViewLib.Themes;assembly=AehnlichViewLib"
	xmlns:local="clr-namespace:AehnlichDirViewModelLib.Views"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:reskeys="clr-namespace:AehnlichViewLib.Themes;assembly=AehnlichViewLib"
	d:DesignHeight="450"
	d:DesignWidth="800"
	mc:Ignorable="d">
	<Grid>
		<Grid.Resources>
			<conv:BoolToVisibilityPropConverter x:Key="BoolToVisibilityPropConverter" />
			<conv:BoolToVisibilityPropConverter
				x:Key="BoolToVisibilityPropConverter1"
				FalseValue="Hidden"
				TrueValue="Visible" />
			<conv:BoolToVisibilityPropConverter
				x:Key="BoolToVisibilityPropConverter2"
				FalseValue="Collapsed"
				TrueValue="Visible" />
			<conv1:MultiParToParConverter x:Key="MultiParToParConverter" />
			<conv:BooleanInvertConverter x:Key="BooleanInvertConverter" />
			<conv1:MultiBoolToVisibilityPropConverter x:Key="MultiBoolToVisibilityPropConverter" />
		</Grid.Resources>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<Grid Grid.Row="0">
			<StackPanel Orientation="Horizontal">
				<Button
					Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
					MinWidth="16"
					MinHeight="16"
					Margin="0,0,3,0"
					Padding="0"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					Command="{Binding CompareDirectoriesCommand}"
					ToolTip="Input 2 valid directory paths and compare their content"
					ToolTipService.ShowOnDisabled="true">
					<Button.CommandParameter>
						<MultiBinding Converter="{StaticResource MultiParToParConverter}">
							<Binding
								Mode="OneWay"
								Path="LeftDirPath"
								UpdateSourceTrigger="PropertyChanged" />
							<Binding
								Mode="OneWay"
								Path="RightDirPath"
								UpdateSourceTrigger="PropertyChanged" />
						</MultiBinding>
					</Button.CommandParameter>

					<Image
						Height="16"
						SnapsToDevicePixels="True"
						Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_RefreshKey}}" />
				</Button>

				<!--  File Diff Mode Selection (Last Update, Length, Byte-By-Byte compare)  -->
				<ComboBox
					Width="200"
					DisplayMemberPath="Name"
					IsEnabled="{Binding DiffProgress.IsProgressbarVisible, Converter={StaticResource BooleanInvertConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
					ItemsSource="{Binding FileDiffMode.DiffFileModes}"
					SelectedItem="{Binding FileDiffMode.DiffFileModeSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					ToolTipService.ShowOnDisabled="true">
					<ComboBox.ToolTip>
						<StackPanel>
							<TextBlock Text="Select a diff file mode to determine speed and quality of file comparison" />
							<Separator />
							<TextBlock Text="{Binding FileDiffMode.DiffFileModeSelected.Description, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
						</StackPanel>
					</ComboBox.ToolTip>
				</ComboBox>

				<StackPanel Orientation="Horizontal">
					<StackPanel.Visibility>
						<MultiBinding Converter="{StaticResource MultiBoolToVisibilityPropConverter}">
							<Binding
								Mode="OneWay"
								Path="DirDiffDoc.IsDiffDataAvailable"
								UpdateSourceTrigger="PropertyChanged" />
							<Binding
								Mode="OneWay"
								Path="DiffProgress.IsProgressbarVisible"
								UpdateSourceTrigger="PropertyChanged" />
						</MultiBinding>
					</StackPanel.Visibility>

					<Separator Margin="3,0,3,0" />

					<Button
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
						MinWidth="16"
						MinHeight="16"
						Margin="0,0,3,0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{Binding DirDiffDoc.OpenFileFromActiveViewCommand}"
						ToolTip="Open in Windows">
						<Image
							Height="16"
							SnapsToDevicePixels="True"
							Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_OpenFileKey}}" />
					</Button>

					<Button
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
						MinWidth="16"
						MinHeight="16"
						Margin="0,0,3,0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{Binding DirDiffDoc.BrowseUpCommand}"
						ToolTip="Go one folder up from current folder"
						ToolTipService.ShowOnDisabled="true">
						<Image
							Height="16"
							SnapsToDevicePixels="True"
							Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_FolderUpKey}}" />
					</Button>

					<Button
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
						MinWidth="16"
						MinHeight="16"
						Margin="0,0,3,0"
						Padding="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Command="{Binding DirDiffDoc.BrowseItemCommand}"
						ToolTip="Select a folder to browse it"
						ToolTipService.ShowOnDisabled="true">
						<Image
							Height="16"
							SnapsToDevicePixels="True"
							Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_FolderDownKey}}" />
					</Button>

					<ComboBox
						Name="ViewModeSelector"
						Width="150"
						behav1:SelectionChangedCommand.ChangedCommand="{Binding DiffViewModeSelectCommand}"
						behav1:SelectionChangedCommand.CommandParameter="{Binding Path=SelectedItem, ElementName=ViewModeSelector}"
						DisplayMemberPath="Name"
						IsEnabled="{Binding DirDiffDoc.IsDiffDataAvailable, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
						ItemsSource="{Binding DiffViewModes}"
						SelectedItem="{Binding DiffViewModeSelected, Mode=OneWay}"
						ToolTip="Change between hierarchical and simple file view"
						ToolTipService.ShowOnDisabled="true" />

					<Separator Margin="3,0,3,0" />

					<Border
						Margin="0,0,3,0"
						Background="{DynamicResource {x:Static reskeys:ResourceKeys.ColorBackgroundContextBrushKey}}"
						BorderBrush="Gray"
						BorderThickness="1">
						<Grid
							Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
							MinWidth="16"
							MinHeight="16"
							HorizontalAlignment="Stretch">
							<Grid.Background>
								<ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_ChangedKey}}" />
							</Grid.Background>
							<Grid.ToolTip>
								<TextBlock>
									<TextBlock Text="{Binding DirDiffDoc.CountFilesChanged}" />
									<TextBlock Text="files changed." />
								</TextBlock>
							</Grid.ToolTip>
						</Grid>
					</Border>

					<Border
						Margin="0,0,3,0"
						Background="{DynamicResource {x:Static reskeys:ResourceKeys.ColorBackgroundDeletedBrushKey}}"
						BorderBrush="Gray"
						BorderThickness="1">
						<Grid
							Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
							MinWidth="16"
							MinHeight="16"
							HorizontalAlignment="Stretch">
							<Grid.RowDefinitions>
								<RowDefinition Height="7*" />
								<RowDefinition Height="2*" />
							</Grid.RowDefinitions>
							<Grid.Background>
								<ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_DeletedKey}}" />
							</Grid.Background>
							<Grid.ToolTip>
								<TextBlock>
									<TextBlock Text="{Binding DirDiffDoc.CountFilesDeleted}" />
									<TextBlock Text="files deleted." />
								</TextBlock>
							</Grid.ToolTip>
						</Grid>
					</Border>

					<Border
						Margin="0,0,3,0"
						Background="{DynamicResource {x:Static reskeys:ResourceKeys.ColorBackgroundAddedBrushKey}}"
						BorderBrush="Gray"
						BorderThickness="1">
						<Grid
							Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
							MinWidth="16"
							MinHeight="16"
							HorizontalAlignment="Stretch">
							<Grid.Background>
								<ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_AddedKey}}" />
							</Grid.Background>
							<Grid.ToolTip>
								<TextBlock>
									<TextBlock Text="{Binding DirDiffDoc.CountFilesAdded}" />
									<TextBlock Text="files added." />
								</TextBlock>
							</Grid.ToolTip>
						</Grid>
					</Border>

					<Separator Margin="3,0,3,0" />

					<TextBlock
						Margin="0,0,3,0"
						Text="{Binding DirDiffDoc.LblFilter}"
						ToolTip="Filter Criteria" />
				</StackPanel>
			</StackPanel>
		</Grid>

		<Grid
			Grid.Row="1"
			Margin="3"
			Visibility="{Binding DiffProgress.IsProgressbarVisible, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityPropConverter}}">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<Grid Grid.Row="0" Margin="3">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<Button
					Grid.Column="0"
					MinWidth="85"
					MinHeight="23"
					VerticalAlignment="Top"
					Command="{Binding CancelCompareCommand}"
					Content="Cancel" />

				<Grid Grid.Column="1" Margin="6,3">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>

					<StackPanel
						Margin="0,3,0,0"
						DataContext="{Binding DiffProgress}"
						Orientation="Horizontal">
						<TextBlock Text="Scanning ">
							<TextBlock Text="{Binding ProgressValue, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
							<TextBlock Text="of ">
								<TextBlock Text="{Binding MaximumProgressValue, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
								<TextBlock Text="directories... " />
							</TextBlock>
						</TextBlock>
					</StackPanel>

					<ProgressBar
						Grid.Row="1"
						Height="3"
						Margin="0,3,0,0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Bottom"
						DataContext="{Binding DiffProgress}"
						IsIndeterminate="{Binding IsIndeterminate, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
						Maximum="{Binding MaximumProgressValue, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
						Minimum="{Binding MinimumProgressValue, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
						Value="{Binding ProgressValue, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
				</Grid>
			</Grid>
		</Grid>

		<Grid Grid.Row="2" Margin="3">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Name="TopColumnA" Width="*" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Name="TopColumnB" Width="*" />
			</Grid.ColumnDefinitions>

			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<TextBox
				Name="LeftDirPath"
				Grid.Row="0"
				Grid.Column="0"
				Margin="0,0,0,3"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Center"
				IsEnabled="{Binding DiffProgress.IsProgressbarVisible, Converter={StaticResource BooleanInvertConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
				Text="{Binding LeftDirPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

			<TextBox
				Grid.Row="1"
				Grid.Column="0"
				Margin="0,3,0,3"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Center"
				IsReadOnly="True"
				Text="{Binding DirDiffDoc.PathA, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
				Visibility="{Binding ElementName=DiffDir, Path=Visibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />

			<GridSplitter
				Grid.Row="0"
				Grid.RowSpan="2"
				Grid.Column="1"
				Width="6"
				HorizontalAlignment="Stretch"
				Background="Transparent"
				DragCompleted="MainSplitter_DragCompleted"
				DragDelta="MainSplitter_DragDelta" />

			<TextBox
				Name="RightDirPath"
				Grid.Row="0"
				Grid.Column="2"
				Margin="0,0,0,3"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Center"
				IsEnabled="{Binding DiffProgress.IsProgressbarVisible, Converter={StaticResource BooleanInvertConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
				Text="{Binding RightDirPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

			<TextBox
				Grid.Row="1"
				Grid.Column="2"
				Margin="0,3,0,3"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Center"
				IsReadOnly="True"
				Text="{Binding DirDiffDoc.PathB, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
				Visibility="{Binding ElementName=DiffDir, Path=Visibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />

			<ctrl:DiffDirView
				Name="DiffDir"
				Grid.Row="2"
				Grid.Column="0"
				Grid.ColumnSpan="3"
				ActivationTimeStamp_A="{Binding DirDiffDoc.ViewActivation_A, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"
				ActivationTimeStamp_B="{Binding DirDiffDoc.ViewActivation_B, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"
				ColumnWidthChanged="DiffDir_ColumnWidthChanged"
				ItemsSource="{Binding DirDiffDoc.DirEntries, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
				SelectedItem_A="{Binding DirDiffDoc.SelectedItem_A, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"
				SelectedItem_B="{Binding DirDiffDoc.SelectedItem_B, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"
				SelectedItemsSourceA="{Binding DirDiffDoc.SelectedItemsA, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
				SelectedItemsSourceB="{Binding DirDiffDoc.SelectedItemsB, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
				<ctrl:DiffDirView.Resources>
					<conv:BindingProxy x:Key="ControlContextProxy" Data="{Binding DirDiffDoc}" />
				</ctrl:DiffDirView.Resources>
				<ctrl:DiffDirView.Visibility>
					<MultiBinding Converter="{StaticResource MultiBoolToVisibilityPropConverter}">
						<Binding
							Mode="OneWay"
							Path="DirDiffDoc.IsDiffDataAvailable"
							UpdateSourceTrigger="PropertyChanged" />
						<Binding
							Mode="OneWay"
							Path="DiffProgress.IsProgressbarVisible"
							UpdateSourceTrigger="PropertyChanged" />
					</MultiBinding>
				</ctrl:DiffDirView.Visibility>
				<ctrl:DiffDirView.ContextMenuA>
					<ContextMenu>
						<MenuItem
							Command="{Binding Data.BrowseItemCommand, Source={StaticResource ControlContextProxy}}"
							CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
							Header="Compare..."
							IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}" />

						<MenuItem
							Command="{Binding Data.CompareFilesCommand, Source={StaticResource ControlContextProxy}}"
							Header="Compare Binary Files"
							IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}">
							<MenuItem.CommandParameter>
								<MultiBinding Converter="{StaticResource MultiParToParConverter}">
									<Binding
										Mode="OneWay"
										Path="PlacementTarget.DataContext"
										RelativeSource="{RelativeSource Mode=FindAncestor,
																		AncestorType={x:Type ContextMenu}}"
										UpdateSourceTrigger="PropertyChanged" />
									<Binding Source="{x:Static aehnlichLibEnums:CompareType.Binary}" />
								</MultiBinding>
							</MenuItem.CommandParameter>
						</MenuItem>

						<MenuItem
							Command="{Binding Data.CompareFilesCommand, Source={StaticResource ControlContextProxy}}"
							Header="Compare Text Files"
							IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}">
							<MenuItem.CommandParameter>
								<MultiBinding Converter="{StaticResource MultiParToParConverter}">
									<Binding
										Mode="OneWay"
										Path="PlacementTarget.DataContext"
										RelativeSource="{RelativeSource Mode=FindAncestor,
																		AncestorType={x:Type ContextMenu}}"
										UpdateSourceTrigger="PropertyChanged" />
									<Binding Source="{x:Static aehnlichLibEnums:CompareType.Text}" />
								</MultiBinding>
							</MenuItem.CommandParameter>
						</MenuItem>

						<MenuItem
							Command="{Binding Data.CompareFilesCommand, Source={StaticResource ControlContextProxy}}"
							Header="Compare Xml Files"
							IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}">
							<MenuItem.CommandParameter>
								<MultiBinding Converter="{StaticResource MultiParToParConverter}">
									<Binding
										Mode="OneWay"
										Path="PlacementTarget.DataContext"
										RelativeSource="{RelativeSource Mode=FindAncestor,
																		AncestorType={x:Type ContextMenu}}"
										UpdateSourceTrigger="PropertyChanged" />
									<Binding Source="{x:Static aehnlichLibEnums:CompareType.Xml}" />
								</MultiBinding>
							</MenuItem.CommandParameter>
						</MenuItem>

						<Separator />

						<MenuItem
							Command="{Binding Data.OpenContainingFolderCommand, Source={StaticResource ControlContextProxy}}"
							CommandParameter="{Binding Path=PlacementTarget.DataContext.ItemPathA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
							Header="Open Containing Folder"
							IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}" />

						<MenuItem
							Command="{Binding Data.CopyPathAToClipboardCommand, Source={StaticResource ControlContextProxy}}"
							CommandParameter="{Binding Data.SelectedItemsA, Source={StaticResource ControlContextProxy}}"
							Header="Copy Path to Clipboard"
							IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}" />

						<MenuItem
							Command="{Binding Data.OpenInWindowsCommand, Source={StaticResource ControlContextProxy}}"
							CommandParameter="{Binding Path=PlacementTarget.DataContext.ItemPathA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
							Header="Open in Windows"
							IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}" />
					</ContextMenu>
				</ctrl:DiffDirView.ContextMenuA>
				<ctrl:DiffDirView.ContextMenuB>
					<ContextMenu>
						<MenuItem
							Command="{Binding Data.BrowseItemCommand, Source={StaticResource ControlContextProxy}}"
							CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
							Header="Compare..."
							IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInB, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}" />

						<MenuItem
							Command="{Binding Data.CompareFilesCommand, Source={StaticResource ControlContextProxy}}"
							Header="Compare Binary Files"
							IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}">
							<MenuItem.CommandParameter>
								<MultiBinding Converter="{StaticResource MultiParToParConverter}">
									<Binding
										Mode="OneWay"
										Path="PlacementTarget.DataContext"
										RelativeSource="{RelativeSource Mode=FindAncestor,
																		AncestorType={x:Type ContextMenu}}"
										UpdateSourceTrigger="PropertyChanged" />
									<Binding Source="{x:Static aehnlichLibEnums:CompareType.Binary}" />
								</MultiBinding>
							</MenuItem.CommandParameter>
						</MenuItem>

						<MenuItem
							Command="{Binding Data.CompareFilesCommand, Source={StaticResource ControlContextProxy}}"
							Header="Compare Text Files"
							IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}">
							<MenuItem.CommandParameter>
								<MultiBinding Converter="{StaticResource MultiParToParConverter}">
									<Binding
										Mode="OneWay"
										Path="PlacementTarget.DataContext"
										RelativeSource="{RelativeSource Mode=FindAncestor,
																		AncestorType={x:Type ContextMenu}}"
										UpdateSourceTrigger="PropertyChanged" />
									<Binding Source="{x:Static aehnlichLibEnums:CompareType.Text}" />
								</MultiBinding>
							</MenuItem.CommandParameter>
						</MenuItem>

						<MenuItem
							Command="{Binding Data.CompareFilesCommand, Source={StaticResource ControlContextProxy}}"
							Header="Compare Xml Files"
							IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}">
							<MenuItem.CommandParameter>
								<MultiBinding Converter="{StaticResource MultiParToParConverter}">
									<Binding
										Mode="OneWay"
										Path="PlacementTarget.DataContext"
										RelativeSource="{RelativeSource Mode=FindAncestor,
																		AncestorType={x:Type ContextMenu}}"
										UpdateSourceTrigger="PropertyChanged" />
									<Binding Source="{x:Static aehnlichLibEnums:CompareType.Xml}" />
								</MultiBinding>
							</MenuItem.CommandParameter>
						</MenuItem>

						<Separator />

						<MenuItem
							Command="{Binding Data.OpenContainingFolderCommand, Source={StaticResource ControlContextProxy}}"
							CommandParameter="{Binding Path=PlacementTarget.DataContext.ItemPathB, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
							Header="Open Containing Folder"
							IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInB, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}" />

						<MenuItem
							Command="{Binding Data.CopyPathBToClipboardCommand, Source={StaticResource ControlContextProxy}}"
							CommandParameter="{Binding Data.SelectedItemsB, Source={StaticResource ControlContextProxy}}"
							Header="Copy Path to Clipboard"
							IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInB, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}" />

						<MenuItem
							Command="{Binding Data.OpenInWindowsCommand, Source={StaticResource ControlContextProxy}}"
							CommandParameter="{Binding Path=PlacementTarget.DataContext.ItemPathB, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
							Header="Open in Windows"
							IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInB, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}" />
					</ContextMenu>
				</ctrl:DiffDirView.ContextMenuB>
			</ctrl:DiffDirView>
		</Grid>
	</Grid>

</UserControl>
