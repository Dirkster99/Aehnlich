<UserControl
    x:Class="AehnlichDirViewModelLib.Views.DirDiffView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
    xmlns:local="clr-namespace:AehnlichDirViewModelLib.Views"
    xmlns:behav1="clr-namespace:AehnlichDirViewModelLib.Behaviors"
    xmlns:conv1="clr-namespace:AehnlichDirViewModelLib.Converters"

    xmlns:conv="clr-namespace:AehnlichViewLib.Converters;assembly=AehnlichViewLib"
    xmlns:behav="clr-namespace:AehnlichViewLib.Behaviors;assembly=AehnlichViewLib"
    xmlns:ctrl="clr-namespace:AehnlichViewLib.Controls;assembly=AehnlichViewLib"
    xmlns:reskeys="clr-namespace:AehnlichViewLib.Themes;assembly=AehnlichViewLib"
    xmlns:icon_src="clr-namespace:AehnlichViewLib.Themes;assembly=AehnlichViewLib"
             
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.Resources>
            <conv:BoolToVisibilityPropConverter x:Key="BoolToVisibilityPropConverter"/>
            <conv:BoolToVisibilityPropConverter x:Key="BoolToVisibilityPropConverter1"
                                                    FalseValue="Hidden"
                                                    TrueValue="Visible"
                                                    />
            <conv:BoolToVisibilityPropConverter x:Key="BoolToVisibilityPropConverter2"
                                                    FalseValue="Collapsed"
                                                    TrueValue="Visible"
                                                    />
            <conv1:MultiParToParConverter x:Key="MultiParToParConverter"/>
            <conv:BooleanInvertConverter x:Key="BooleanInvertConverter"/>
            <conv1:MultiBoolToVisibilityPropConverter x:Key="MultiBoolToVisibilityPropConverter"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <StackPanel Orientation="Horizontal">
                <Button
                    Command="{Binding CompareDirectoriesCommand}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    MinHeight="16" MinWidth="16"
                    Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                    Margin="0,0,3,0"
                    
                    ToolTip="Input 2 valid directory paths and compare their content"
                    ToolTipService.ShowOnDisabled="true"
                    Padding="0"
                    >
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource MultiParToParConverter}">
                            <Binding Path="LeftDirPath" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                            <Binding Path="RightDirPath" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                        </MultiBinding>
                    </Button.CommandParameter>

                    <Image Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_RefreshKey}}"
                           Height="16" SnapsToDevicePixels="True"/>
                </Button>

                <!-- File Diff Mode Selection (Last Update, Length, Byte-By-Byte compare) -->
                <ComboBox DataContext="{Binding FileDiffMode}"
                    ItemsSource="{Binding DiffFileModes}"
                    SelectedItem="{Binding DiffFileModeSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                    DisplayMemberPath="Name"
                    IsEnabled="{Binding DiffProgress.IsProgressbarVisible,Converter={StaticResource BooleanInvertConverter},Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                    Width="200"
                    ToolTipService.ShowOnDisabled="true"
                    >
                    <ComboBox.ToolTip>
                        <StackPanel>
                            <TextBlock Text="Select a diff file mode to determine speed and quality of file comparison"/>
                            <Separator/>
                            <TextBlock Text="{Binding DiffFileModeSelected.Description,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </ComboBox.ToolTip>
                </ComboBox>

                <StackPanel Orientation="Horizontal"
                            >
                    <StackPanel.Visibility>
                        <MultiBinding Converter="{StaticResource MultiBoolToVisibilityPropConverter}">
                            <Binding Path="DirDiffDoc.IsDiffDataAvailable" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                            <Binding Path="DiffProgress.IsProgressbarVisible" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                        </MultiBinding>
                    </StackPanel.Visibility>

                    <Separator Margin="3,0,3,0" />

                    <Button
                        Command="{Binding DirDiffDoc.OpenFileFromActiveViewCommand}"
                        ToolTip="Open in Windows"
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                        MinHeight="16" MinWidth="16"
                        Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                        Margin="0,0,3,0"
                        Padding="0"
                    >
                        <Image Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_OpenFileKey}}"
                               Height="16" SnapsToDevicePixels="True"/>
                    </Button>

                    <Button
                        Command="{Binding DirDiffDoc.BrowseUpCommand}"

                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                        MinHeight="16" MinWidth="16"
                        Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                        Margin="0,0,3,0"
                    
                        ToolTip="Go one folder up from current folder"
                        ToolTipService.ShowOnDisabled="true"
                        Padding="0"
                    >
                        <Image Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_FolderUpKey}}"
                               Height="16" SnapsToDevicePixels="True"/>
                    </Button>

                    <Button
                        Command="{Binding DirDiffDoc.BrowseItemCommand}"

                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                        MinHeight="16" MinWidth="16"
                        Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                        Margin="0,0,3,0"
                    
                        ToolTip="Select a folder to browse it"
                        ToolTipService.ShowOnDisabled="true"
                        Padding="0"
                    >
                        <Image Source="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_FolderDownKey}}"
                               Height="16" SnapsToDevicePixels="True"/>
                    </Button>

                    <ComboBox
                        Name="ViewModeSelector"
                        ItemsSource="{Binding DiffViewModes}"
                        SelectedItem="{Binding DiffViewModeSelected,Mode=OneWay}"
                        DisplayMemberPath="Name"
                        Width="150"
                        behav1:SelectionChangedCommand.ChangedCommand="{Binding DiffViewModeSelectCommand}"
                        behav1:SelectionChangedCommand.CommandParameter="{Binding Path=SelectedItem, ElementName=ViewModeSelector}"
                        IsEnabled="{Binding DirDiffDoc.IsDiffDataAvailable,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                        ToolTip="Change between hierarchical and simple file view"
                        ToolTipService.ShowOnDisabled="true"
                    />

                    <Separator Margin="3,0,3,0" />

                    <Border
                        BorderBrush="Gray" BorderThickness="1" Margin="0,0,3,0"
						Background="{DynamicResource {x:Static reskeys:ResourceKeys.ColorBackgroundContextBrushKey}}"
					>
                        <Grid 
                        HorizontalAlignment="Stretch"
						MinHeight="16" MinWidth="16"
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}">
                            <Grid.Background>
                                <ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_ChangedKey}}"/>
                            </Grid.Background>
                            <Grid.ToolTip>
                                <TextBlock><TextBlock Text="{Binding DirDiffDoc.CountFilesChanged}"/> <TextBlock Text="files changed."/></TextBlock>
                            </Grid.ToolTip>
                        </Grid>
                    </Border>

                    <Border
                        BorderBrush="Gray" BorderThickness="1" Margin="0,0,3,0"
						Background="{DynamicResource {x:Static reskeys:ResourceKeys.ColorBackgroundDeletedBrushKey}}"
					>
                        <Grid 
                        HorizontalAlignment="Stretch"
						MinHeight="16" MinWidth="16"
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="7*"/>
                                <RowDefinition Height="2*"/>
                            </Grid.RowDefinitions>
                            <Grid.Background>
                                <ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_DeletedKey}}"/>
                            </Grid.Background>
                            <Grid.ToolTip>
                                <TextBlock><TextBlock Text="{Binding DirDiffDoc.CountFilesDeleted}"/> <TextBlock Text="files deleted."/></TextBlock>
                            </Grid.ToolTip>
                        </Grid>
                    </Border>

                    <Border
                        BorderBrush="Gray" BorderThickness="1" Margin="0,0,3,0"
						Background="{DynamicResource {x:Static reskeys:ResourceKeys.ColorBackgroundAddedBrushKey}}">
                        <Grid 
                        HorizontalAlignment="Stretch"
						MinHeight="16" MinWidth="16"
						Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}">
                            <Grid.Background>
                                <ImageBrush ImageSource="{DynamicResource {x:Static icon_src:ResourceKeys.ICON_AddedKey}}"/>
                            </Grid.Background>
                            <Grid.ToolTip>
                                <TextBlock><TextBlock Text="{Binding DirDiffDoc.CountFilesAdded}"/> <TextBlock Text="files added."/></TextBlock>
                            </Grid.ToolTip>
                        </Grid>
                    </Border>

                    <Separator Margin="3,0,3,0" />

                    <TextBlock
                        Text="{Binding DirDiffDoc.LblFilter}"
						ToolTip="Filter Criteria"
					    Margin="0,0,3,0" />
                </StackPanel>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1"
              Visibility="{Binding DiffProgress.IsProgressbarVisible, Mode=OneWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityPropConverter}}"
              Margin="3"
            >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0"
                  Margin="3"
                  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Button
                    Grid.Column="0"
                    Command="{Binding CancelCompareCommand}"
                    MinHeight="23" MinWidth="85"
                    Content="Cancel"
                    VerticalAlignment="Top"/>

                <Grid Grid.Column="1" Margin="6,3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal" Margin="0,3,0,0"
                                DataContext="{Binding DiffProgress}">
                        <TextBlock Text="Scanning ">
                        <TextBlock Text="{Binding ProgressValue, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="of ">
                        <TextBlock Text="{Binding MaximumProgressValue, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="directories... "/>
                        </TextBlock>
                      </TextBlock>
                  </StackPanel>

                    <ProgressBar
                        Grid.Row="1" Height="3" Margin="0,3,0,0"
                        DataContext="{Binding DiffProgress}"
                        IsIndeterminate="{Binding IsIndeterminate, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                        Value="{Binding ProgressValue, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                        Minimum="{Binding MinimumProgressValue, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                        Maximum="{Binding MaximumProgressValue, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                    />
                </Grid>
            </Grid>
        </Grid>

        <Grid Grid.Row="2" Margin="3"
              >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"  Name="TopColumnA"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"  Name="TopColumnB"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBox
                Name="LeftDirPath"
                Grid.Column="0" Grid.Row="0"
                Text="{Binding LeftDirPath,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                IsEnabled="{Binding DiffProgress.IsProgressbarVisible,Converter={StaticResource BooleanInvertConverter},Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                HorizontalAlignment="Stretch" VerticalAlignment="Center"
                Margin="0,0,0,3"
                />

            <TextBox
                Grid.Column="0" Grid.Row="1"
                Text="{Binding DirDiffDoc.PathA,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                IsReadOnly="True"
                Visibility="{Binding ElementName=DiffDir, Path=Visibility,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                HorizontalAlignment="Stretch" VerticalAlignment="Center"
                Margin="0,3,0,3"
                />

            <GridSplitter
                Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
                HorizontalAlignment="Stretch"
                Background="Transparent"
                Width="6"
                DragCompleted="GridSplitter_DragCompleted"
                DragDelta="MainSplitter_DragDelta"
                />

            <TextBox
                Name="RightDirPath"
                Grid.Column="2" Grid.Row="0"
                Text="{Binding RightDirPath,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                IsEnabled="{Binding DiffProgress.IsProgressbarVisible,Converter={StaticResource BooleanInvertConverter},Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                HorizontalAlignment="Stretch" VerticalAlignment="Center"
                Margin="0,0,0,3"
                />

            <TextBox
                Grid.Column="2" Grid.Row="1"
                Text="{Binding DirDiffDoc.PathB,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                IsReadOnly="True"
                Visibility="{Binding ElementName=DiffDir, Path=Visibility,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                HorizontalAlignment="Stretch" VerticalAlignment="Center"
                Margin="0,3,0,3"
                />

            <ctrl:DiffDirView Name="DiffDir"
                              Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="3"
                              ItemsSource="{Binding DirDiffDoc.DirEntries,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"
                              ColumnWidthChanged="DiffDir_ColumnWidthChanged"
							  
							  ActivationTimeStamp_A="{Binding DirDiffDoc.ViewActivation_A,UpdateSourceTrigger=PropertyChanged,Mode=OneWayToSource}"
							  ActivationTimeStamp_B="{Binding DirDiffDoc.ViewActivation_B,UpdateSourceTrigger=PropertyChanged,Mode=OneWayToSource}"
							  
							  SelectedItem_A="{Binding DirDiffDoc.SelectedItem_A,UpdateSourceTrigger=PropertyChanged,Mode=OneWayToSource}"
							  SelectedItem_B="{Binding DirDiffDoc.SelectedItem_B,UpdateSourceTrigger=PropertyChanged,Mode=OneWayToSource}"
                              
                              SelectedItemsSourceA="{Binding DirDiffDoc.SelectedItemsA,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"
                              SelectedItemsSourceB="{Binding DirDiffDoc.SelectedItemsB,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"
                              >
                <ctrl:DiffDirView.Resources>
                    <behav:BindingProxy x:Key="ControlContextProxy" Data="{Binding DirDiffDoc}" />
                </ctrl:DiffDirView.Resources>
                <ctrl:DiffDirView.Visibility>
                    <MultiBinding Converter="{StaticResource MultiBoolToVisibilityPropConverter}">
                        <Binding Path="DirDiffDoc.IsDiffDataAvailable" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                        <Binding Path="DiffProgress.IsProgressbarVisible" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                    </MultiBinding>
                </ctrl:DiffDirView.Visibility>
                <ctrl:DiffDirView.ContextMenuA>
                    <ContextMenu>
                        <MenuItem
                            Header="Open Containing Folder"
                            IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                            Command="{Binding Data.OpenContainingFolderCommand, Source={StaticResource ControlContextProxy}}"
                            CommandParameter="{Binding Path=PlacementTarget.DataContext.ItemPathA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                        />

                        <MenuItem
                            Header="Copy Path to Clipboard"
                            IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                            Command="{Binding Data.CopyPathAToClipboardCommand, Source={StaticResource ControlContextProxy}}"
                            CommandParameter="{Binding Data.SelectedItemsA, Source={StaticResource ControlContextProxy}}"
                        />

                        <MenuItem
                            Header="Open in Windows"
                            IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                            Command="{Binding Data.OpenInWindowsCommand, Source={StaticResource ControlContextProxy}}"
                            CommandParameter="{Binding Path=PlacementTarget.DataContext.ItemPathA, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                        />
                    </ContextMenu>
                </ctrl:DiffDirView.ContextMenuA>
                <ctrl:DiffDirView.ContextMenuB>
                    <ContextMenu>
                        <MenuItem
                            Header="Open Containing Folder"
                            IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInB, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                            Command="{Binding Data.OpenContainingFolderCommand, Source={StaticResource ControlContextProxy}}"
                            CommandParameter="{Binding Path=PlacementTarget.DataContext.ItemPathB, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                        />

                        <MenuItem
                            Header="Copy Path to Clipboard"
                            IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInB, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                            Command="{Binding Data.CopyPathBToClipboardCommand, Source={StaticResource ControlContextProxy}}"
                            CommandParameter="{Binding Data.SelectedItemsB, Source={StaticResource ControlContextProxy}}"
                        />

                        <MenuItem
                            Header="Open in Windows"
                            IsEnabled="{Binding Path=PlacementTarget.DataContext.IsItemInB, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                            Command="{Binding Data.OpenInWindowsCommand, Source={StaticResource ControlContextProxy}}"
                            CommandParameter="{Binding Path=PlacementTarget.DataContext.ItemPathB, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                        />
                    </ContextMenu>
                </ctrl:DiffDirView.ContextMenuB>
            </ctrl:DiffDirView>
        </Grid>
    </Grid>

</UserControl>
