<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:conv="clr-namespace:AehnlichViewLib.Converters"
	xmlns:local="clr-namespace:AehnlichViewLib.Controls.Overview"
	xmlns:reskeys="clr-namespace:AehnlichViewLib.Themes">

	<Style BasedOn="{StaticResource {x:Type ScrollBar}}" TargetType="{x:Type local:RangeScrollbar}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlNormalForegroundBrushKey}}" />
		<Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlNormalBackgroundBrushKey}}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Style.Resources>
			<conv:BoolToVisibilityPropConverter x:Key="BoolToVisibilityPropConverter" />
			<conv:DoublesToVisibilityConverter x:Key="DoublesToVisibilityConverter" />
			<conv:InvertColorConverter x:Key="InvertColorConverter" />
		</Style.Resources>
		<Style.Triggers>
			<!--  ScrollBar layout for vertical orientation (from top to bottom)  -->
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type local:RangeScrollbar}">
							<Border
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}">
								<Grid x:Name="Bg" SnapsToDevicePixels="True">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
										<RowDefinition Height="1E-05*" />
										<RowDefinition Height="Auto" MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
									</Grid.RowDefinitions>

									<RepeatButton
										x:Name="PART_LineUpButton"
										Command="{x:Static ScrollBar.LineUpCommand}"
										IsEnabled="{TemplateBinding IsMouseOver}">
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<!--  Hide Decrease Increase Repeat Button through dependency property  -->
												<Setter Property="Visibility" Value="{Binding IsRepeatButtonVisible, Converter={StaticResource BoolToVisibilityPropConverter}, RelativeSource={RelativeSource AncestorType={x:Type local:RangeScrollbar}}, UpdateSourceTrigger=PropertyChanged}" />
												<Setter Property="BorderThickness" Value="1" />
												<Setter Property="HorizontalContentAlignment" Value="Center" />
												<Setter Property="VerticalContentAlignment" Value="Center" />
												<Setter Property="Padding" Value="1" />
												<Setter Property="Focusable" Value="False" />
												<Setter Property="IsTabStop" Value="False" />
												<Setter Property="FocusVisualStyle">
													<Setter.Value>
														<Style>
															<Setter Property="Control.Template">
																<Setter.Value>
																	<ControlTemplate>
																		<Rectangle
																			Margin="2"
																			SnapsToDevicePixels="True"
																			Stroke="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"
																			StrokeDashArray="1 2"
																			StrokeThickness="1" />
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</Setter.Value>
												</Setter>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Border
																x:Name="border"
																Background="#FFF0F0F0"
																BorderBrush="#FFF0F0F0"
																BorderThickness="1"
																SnapsToDevicePixels="True">
																<ContentPresenter
																	x:Name="contentPresenter"
																	Margin="{TemplateBinding Padding}"
																	HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																	VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																	Content="{TemplateBinding Content}"
																	ContentStringFormat="{TemplateBinding ContentStringFormat}"
																	ContentTemplate="{TemplateBinding ContentTemplate}"
																	Focusable="False"
																	SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
															</Border>
															<ControlTemplate.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter TargetName="border" Property="Background" Value="#FFDADADA" />
																	<Setter TargetName="border" Property="BorderBrush" Value="#FFDADADA" />
																</Trigger>
																<Trigger Property="IsPressed" Value="True">
																	<Setter TargetName="border" Property="Background" Value="#FF606060" />
																	<Setter TargetName="border" Property="BorderBrush" Value="#FF606060" />
																</Trigger>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
																	<Setter TargetName="border" Property="Background" Value="#FFF0F0F0" />
																	<Setter TargetName="border" Property="BorderBrush" Value="#FFF0F0F0" />
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</RepeatButton.Style>
										<Path
											x:Name="ArrowTop"
											Margin="3,4,3,3"
											Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z"
											Fill="#FF606060"
											Stretch="Uniform" />
									</RepeatButton>

									<local:RangeItemsControl
										x:Name="PART_RangeOverlay"
										Grid.Row="1"
										Padding="3,0"
										IsHitTestVisible="False"
										ItemTemplate="{TemplateBinding Property=ItemTemplate}"
										ItemsSource="{TemplateBinding Property=ItemsSource}"
										Maximum="{TemplateBinding Property=Maximum}"
										Minimum="{TemplateBinding Property=Minimum}"
										Orientation="{TemplateBinding Property=Orientation}" />

									<Track
										x:Name="PART_Track"
										Grid.Row="1"
										IsDirectionReversed="True"
										IsEnabled="{TemplateBinding IsMouseOver}">
										<Track.DecreaseRepeatButton>
											<RepeatButton Command="ScrollBar.PageUpCommand">
												<RepeatButton.Style>
													<Style TargetType="{x:Type RepeatButton}">
														<Setter Property="OverridesDefaultStyle" Value="True" />
														<Setter Property="Background" Value="Transparent" />
														<Setter Property="Focusable" Value="False" />
														<Setter Property="IsTabStop" Value="False" />
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type RepeatButton}">
																	<Rectangle
																		Width="{TemplateBinding Width}"
																		Height="{TemplateBinding Height}"
																		Fill="{TemplateBinding Background}" />
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</RepeatButton.Style>
											</RepeatButton>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Command="ScrollBar.PageDownCommand">
												<RepeatButton.Style>
													<Style TargetType="{x:Type RepeatButton}">
														<Setter Property="OverridesDefaultStyle" Value="True" />
														<Setter Property="Background" Value="Transparent" />
														<Setter Property="Focusable" Value="False" />
														<Setter Property="IsTabStop" Value="False" />
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type RepeatButton}">
																	<Rectangle
																		Width="{TemplateBinding Width}"
																		Height="{TemplateBinding Height}"
																		Fill="{TemplateBinding Background}" />
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</RepeatButton.Style>
											</RepeatButton>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb>
												<Thumb.Style>
													<Style TargetType="{x:Type Thumb}">
														<Setter Property="OverridesDefaultStyle" Value="True" />
														<Setter Property="IsTabStop" Value="False" />
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type Thumb}">
																	<Border BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.VerticalSLideThumbBorderBrushKey}}" BorderThickness="3,0,3,0">
																		<Rectangle
																			x:Name="rectangle"
																			Width="{TemplateBinding Width}"
																			Height="{TemplateBinding Height}"
																			Fill="{DynamicResource {x:Static reskeys:ResourceKeys.VerticalSLideThumbForegroundBrushKey}}"
																			SnapsToDevicePixels="True" />
																	</Border>
																	<ControlTemplate.Triggers>
																		<Trigger Property="IsMouseOver" Value="True">
																			<Setter TargetName="rectangle" Property="Fill" Value="#FFA6A6A6" />
																		</Trigger>
																		<Trigger Property="IsDragging" Value="True">
																			<Setter TargetName="rectangle" Property="Fill" Value="#FF606060" />
																		</Trigger>
																	</ControlTemplate.Triggers>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</Thumb.Style>
												<Thumb.Visibility>
													<MultiBinding Converter="{StaticResource DoublesToVisibilityConverter}">
														<Binding
															Mode="OneWay"
															Path="ViewportSize"
															RelativeSource="{RelativeSource Mode=FindAncestor,
																							AncestorType={x:Type local:RangeScrollbar}}"
															UpdateSourceTrigger="PropertyChanged" />
														<Binding
															Mode="OneWay"
															Path="DocumentSize"
															RelativeSource="{RelativeSource Mode=FindAncestor,
																							AncestorType={x:Type local:RangeScrollbar}}"
															UpdateSourceTrigger="PropertyChanged" />
													</MultiBinding>
												</Thumb.Visibility>
											</Thumb>
										</Track.Thumb>
									</Track>

									<RepeatButton
										x:Name="PART_LineDownButton"
										Grid.Row="2"
										Command="{x:Static ScrollBar.LineDownCommand}"
										IsEnabled="{TemplateBinding IsMouseOver}">
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<!--  Hide Decrease Increase Repeat Buttons though dependency property  -->
												<Setter Property="Visibility" Value="{Binding IsRepeatButtonVisible, Converter={StaticResource BoolToVisibilityPropConverter}, RelativeSource={RelativeSource AncestorType={x:Type local:RangeScrollbar}}, UpdateSourceTrigger=PropertyChanged}" />
												<Setter Property="BorderThickness" Value="1" />
												<Setter Property="HorizontalContentAlignment" Value="Center" />
												<Setter Property="VerticalContentAlignment" Value="Center" />
												<Setter Property="Padding" Value="1" />
												<Setter Property="Focusable" Value="False" />
												<Setter Property="IsTabStop" Value="False" />
												<Setter Property="FocusVisualStyle">
													<Setter.Value>
														<Style>
															<Setter Property="Control.Template">
																<Setter.Value>
																	<ControlTemplate>
																		<Rectangle
																			Margin="2"
																			SnapsToDevicePixels="True"
																			Stroke="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"
																			StrokeDashArray="1 2"
																			StrokeThickness="1" />
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</Setter.Value>
												</Setter>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Border
																x:Name="border"
																Background="#FFF0F0F0"
																BorderBrush="#FFF0F0F0"
																BorderThickness="1"
																SnapsToDevicePixels="True">
																<ContentPresenter
																	x:Name="contentPresenter"
																	Margin="{TemplateBinding Padding}"
																	HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																	VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																	Content="{TemplateBinding Content}"
																	ContentStringFormat="{TemplateBinding ContentStringFormat}"
																	ContentTemplate="{TemplateBinding ContentTemplate}"
																	Focusable="False"
																	SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
															</Border>
															<ControlTemplate.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter TargetName="border" Property="Background" Value="#FFDADADA" />
																	<Setter TargetName="border" Property="BorderBrush" Value="#FFDADADA" />
																</Trigger>
																<Trigger Property="IsPressed" Value="True">
																	<Setter TargetName="border" Property="Background" Value="#FF606060" />
																	<Setter TargetName="border" Property="BorderBrush" Value="#FF606060" />
																</Trigger>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
																	<Setter TargetName="border" Property="Background" Value="#FFF0F0F0" />
																	<Setter TargetName="border" Property="BorderBrush" Value="#FFF0F0F0" />
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</RepeatButton.Style>
										<Path
											x:Name="ArrowBottom"
											Margin="3,4,3,3"
											Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z"
											Fill="#FF606060"
											Stretch="Uniform" />
									</RepeatButton>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowBottom" Property="Fill" Value="White" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowTop" Property="Fill" Value="White" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowBottom" Property="Fill" Value="Black" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowTop" Property="Fill" Value="Black" />
								</MultiDataTrigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="ArrowTop" Property="Fill" Value="#FFBFBFBF" />
									<Setter TargetName="ArrowBottom" Property="Fill" Value="#FFBFBFBF" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>

			<!--  ScrollBar layout for horizontal orientation (from left to right)  -->
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type local:RangeScrollbar}">
							<Border
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}">
								<Grid x:Name="Bg" SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
										<ColumnDefinition Width="1E-05*" />
										<ColumnDefinition Width="Auto" MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
									</Grid.ColumnDefinitions>
									<RepeatButton
										x:Name="PART_LineLeftButton"
										Command="{x:Static ScrollBar.LineLeftCommand}"
										IsEnabled="{TemplateBinding IsMouseOver}">
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<Setter Property="FocusVisualStyle">
													<Setter.Value>
														<Style>
															<Setter Property="Control.Template">
																<Setter.Value>
																	<ControlTemplate>
																		<Rectangle
																			Margin="2"
																			SnapsToDevicePixels="True"
																			Stroke="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"
																			StrokeDashArray="1 2"
																			StrokeThickness="1" />
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</Setter.Value>
												</Setter>
												<Setter Property="BorderThickness" Value="1" />
												<Setter Property="HorizontalContentAlignment" Value="Center" />
												<Setter Property="VerticalContentAlignment" Value="Center" />
												<Setter Property="Padding" Value="1" />
												<Setter Property="Focusable" Value="False" />
												<Setter Property="IsTabStop" Value="False" />
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Border
																x:Name="border"
																Background="#FFF0F0F0"
																BorderBrush="#FFF0F0F0"
																BorderThickness="1"
																SnapsToDevicePixels="True">
																<ContentPresenter
																	x:Name="contentPresenter"
																	Margin="{TemplateBinding Padding}"
																	HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																	VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																	Content="{TemplateBinding Content}"
																	ContentStringFormat="{TemplateBinding ContentStringFormat}"
																	ContentTemplate="{TemplateBinding ContentTemplate}"
																	Focusable="False"
																	SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
															</Border>
															<ControlTemplate.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter TargetName="border" Property="Background" Value="#FFDADADA" />
																	<Setter TargetName="border" Property="BorderBrush" Value="#FFDADADA" />
																</Trigger>
																<Trigger Property="IsPressed" Value="True">
																	<Setter TargetName="border" Property="Background" Value="#FF606060" />
																	<Setter TargetName="border" Property="BorderBrush" Value="#FF606060" />
																</Trigger>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
																	<Setter TargetName="border" Property="Background" Value="#FFF0F0F0" />
																	<Setter TargetName="border" Property="BorderBrush" Value="#FFF0F0F0" />
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</RepeatButton.Style>
										<Path
											x:Name="ArrowLeft"
											Margin="3"
											Data="M3.18,7C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7z"
											Fill="#FF606060"
											Stretch="Uniform" />
									</RepeatButton>

									<local:RangeItemsControl
										x:Name="PART_RangeOverlay"
										Grid.Column="1"
										IsHitTestVisible="False"
										ItemTemplate="{TemplateBinding Property=ItemTemplate}"
										ItemsSource="{TemplateBinding Property=ItemsSource}"
										Maximum="{TemplateBinding Property=Maximum}"
										Minimum="{TemplateBinding Property=Minimum}"
										Orientation="{TemplateBinding Property=Orientation}" />

									<Track
										x:Name="PART_Track"
										Grid.Column="1"
										IsEnabled="{TemplateBinding IsMouseOver}">
										<Track.DecreaseRepeatButton>
											<RepeatButton Command="ScrollBar.PageLeftCommand">
												<RepeatButton.Style>
													<Style TargetType="{x:Type RepeatButton}">
														<Setter Property="OverridesDefaultStyle" Value="True" />
														<Setter Property="Background" Value="Transparent" />
														<Setter Property="Focusable" Value="False" />
														<Setter Property="IsTabStop" Value="False" />
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type RepeatButton}">
																	<Rectangle
																		Width="{TemplateBinding Width}"
																		Height="{TemplateBinding Height}"
																		Fill="{TemplateBinding Background}" />
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</RepeatButton.Style>
											</RepeatButton>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Command="ScrollBar.PageRightCommand">
												<RepeatButton.Style>
													<Style TargetType="{x:Type RepeatButton}">
														<Setter Property="OverridesDefaultStyle" Value="True" />
														<Setter Property="Background" Value="Transparent" />
														<Setter Property="Focusable" Value="False" />
														<Setter Property="IsTabStop" Value="False" />
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type RepeatButton}">
																	<Rectangle
																		Width="{TemplateBinding Width}"
																		Height="{TemplateBinding Height}"
																		Fill="{TemplateBinding Background}" />
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</RepeatButton.Style>
											</RepeatButton>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb>
												<Thumb.Style>
													<Style TargetType="{x:Type Thumb}">
														<Setter Property="OverridesDefaultStyle" Value="True" />
														<Setter Property="IsTabStop" Value="False" />
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type Thumb}">
																	<Border BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.VerticalSLideThumbBorderBrushKey}}" BorderThickness="0,3,0,3">
																		<Rectangle
																			x:Name="rectangle"
																			Width="{TemplateBinding Width}"
																			Height="{TemplateBinding Height}"
																			Fill="{DynamicResource {x:Static reskeys:ResourceKeys.VerticalSLideThumbForegroundBrushKey}}"
																			SnapsToDevicePixels="True" />
																	</Border>
																	<ControlTemplate.Triggers>
																		<Trigger Property="IsMouseOver" Value="True">
																			<Setter TargetName="rectangle" Property="Fill" Value="#FFA6A6A6" />
																		</Trigger>
																		<Trigger Property="IsDragging" Value="True">
																			<Setter TargetName="rectangle" Property="Fill" Value="#FF606060" />
																		</Trigger>
																	</ControlTemplate.Triggers>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</Thumb.Style>
												<Thumb.Visibility>
													<MultiBinding Converter="{StaticResource DoublesToVisibilityConverter}">
														<Binding
															Mode="OneWay"
															Path="ViewportSize"
															RelativeSource="{RelativeSource Mode=FindAncestor,
																							AncestorType={x:Type local:RangeScrollbar}}"
															UpdateSourceTrigger="PropertyChanged" />
														<Binding
															Mode="OneWay"
															Path="DocumentSize"
															RelativeSource="{RelativeSource Mode=FindAncestor,
																							AncestorType={x:Type local:RangeScrollbar}}"
															UpdateSourceTrigger="PropertyChanged" />
													</MultiBinding>
												</Thumb.Visibility>
											</Thumb>
										</Track.Thumb>
									</Track>

									<RepeatButton
										x:Name="PART_LineRightButton"
										Grid.Column="2"
										Command="ScrollBar.LineRightCommand"
										IsEnabled="{TemplateBinding IsMouseOver}">
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<Setter Property="FocusVisualStyle">
													<Setter.Value>
														<Style>
															<Setter Property="Control.Template">
																<Setter.Value>
																	<ControlTemplate>
																		<Rectangle
																			Margin="2"
																			SnapsToDevicePixels="True"
																			Stroke="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"
																			StrokeDashArray="1 2"
																			StrokeThickness="1" />
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</Setter.Value>
												</Setter>
												<Setter Property="BorderThickness" Value="1" />
												<Setter Property="HorizontalContentAlignment" Value="Center" />
												<Setter Property="VerticalContentAlignment" Value="Center" />
												<Setter Property="Padding" Value="1" />
												<Setter Property="Focusable" Value="False" />
												<Setter Property="IsTabStop" Value="False" />
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Border
																x:Name="border"
																Background="#FFF0F0F0"
																BorderBrush="#FFF0F0F0"
																BorderThickness="1"
																SnapsToDevicePixels="True">
																<ContentPresenter
																	x:Name="contentPresenter"
																	Margin="{TemplateBinding Padding}"
																	HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																	VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																	Content="{TemplateBinding Content}"
																	ContentStringFormat="{TemplateBinding ContentStringFormat}"
																	ContentTemplate="{TemplateBinding ContentTemplate}"
																	Focusable="False"
																	SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
															</Border>
															<ControlTemplate.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter TargetName="border" Property="Background" Value="#FFDADADA" />
																	<Setter TargetName="border" Property="BorderBrush" Value="#FFDADADA" />
																</Trigger>
																<Trigger Property="IsPressed" Value="True">
																	<Setter TargetName="border" Property="Background" Value="#FF606060" />
																	<Setter TargetName="border" Property="BorderBrush" Value="#FF606060" />
																</Trigger>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
																	<Setter TargetName="border" Property="Background" Value="#FFF0F0F0" />
																	<Setter TargetName="border" Property="BorderBrush" Value="#FFF0F0F0" />
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</RepeatButton.Style>
										<Path
											x:Name="ArrowRight"
											Margin="3"
											Data="M1.81,7C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7z"
											Fill="#FF606060"
											Stretch="Uniform" />
									</RepeatButton>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowRight" Property="Fill" Value="White" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowLeft" Property="Fill" Value="White" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowRight" Property="Fill" Value="Black" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowLeft" Property="Fill" Value="Black" />
								</MultiDataTrigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="ArrowLeft" Property="Fill" Value="#FFBFBFBF" />
									<Setter TargetName="ArrowRight" Property="Fill" Value="#FFBFBFBF" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>
