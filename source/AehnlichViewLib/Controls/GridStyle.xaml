<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:AehnlichViewLib.Controls"
    xmlns:reskeys="clr-namespace:AehnlichViewLib.Themes">

    <!--  DATAGRID  -->
    <Style
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys},
                                     ResourceId=DefaultDataGridStyleKey}"
        BasedOn="{StaticResource {x:Type DataGrid}}"
        TargetType="{x:Type DataGrid}">

        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlNormalBackgroundBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DataGridBorderBrushKey}}" />
        <!--  Setter Property="RowHeight" Value="21" /  -->
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.VerticalGridLinesBrush}}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.HorizontalGridLinesBrush}}" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="SelectionMode" Value="Extended" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="ClipboardCopyMode" Value="IncludeHeader" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlNormalForegroundBrushKey}}" />
        <Style.Triggers>
            <Trigger Property="HeadersVisibility" Value="Column">
                <!--  Workaround datagrid bug; refs: http://wpf.codeplex.com/discussions/47047  -->
                <Setter Property="RowHeaderWidth" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys},
                                     ResourceId=DefaultColumnHeaderGripperStyleKey}"
        BasedOn="{StaticResource {x:Type Thumb}}"
        TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Margin="{TemplateBinding Padding}"
                        Background="Transparent"
                        BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.DataGridHeaderBorderBrushKey}}"
                        BorderThickness="0,0,1,0"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="8" />
    </Style>

    <Style
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys},
                                     ResourceId=DefaultDataGridHeaderStyleKey}"
        BasedOn="{StaticResource {x:Type DataGridColumnHeader}}"
        TargetType="DataGridColumnHeader">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlBorderBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DataGridHeaderBackgroundBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DataGridHeaderForegroundBrushKey}}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DataGridHeaderFontSize}}" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static reskeys:ResourceKeys.DataGridHeaderFontFamily}}" />
        <Setter Property="MinHeight" Value="21" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="BackgroundBorder"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />

                        <ContentPresenter
                            x:Name="PART_ContentPresenter"
                            Margin="3,0"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Path
                            x:Name="SortArrow"
                            Grid.Column="1"
                            Width="8"
                            Height="10"
                            Margin="0,0,8,2"
                            VerticalAlignment="Center"
                            Fill="{DynamicResource {x:Static reskeys:ResourceKeys.DataGridHeaderSortArrowForegroundBrushKey}}"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Fill"
                            Visibility="Collapsed" />

                        <!--
                            Thumb x:Name="PART_LeftHeaderGripper"
                            Grid.Column="0"
                            HorizontalAlignment="Left"
                            Background="Transparent"
                            Style="{StaticResource DefaultColumnHeaderGripperStyleKey}"
                            /
                        -->

                        <Thumb
                            x:Name="PART_RightHeaderGripper"
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            Background="Transparent"
                            Style="{DynamicResource {x:Static reskeys:ResourceKeys.DefaultColumnHeaderGripperStyleKey}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Data" Value="F1 M 34,57L 42,57L 42,32.25L 52,42.25L 52,31.75L 38,17.75L 24,31.75L 24,42.25L 34,32.25L 34,57 Z " />
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Data" Value="F1 M 42,19.0002L 34,19.0002L 34,43.7502L 24,33.7502L 24,44.2502L 38,58.2502L 52,44.2502L 52,33.7502L 42,43.7502L 42,19.0002 Z " />
                            <Setter TargetName="SortArrow" Property="Margin" Value="0,0,8,0" />
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type reskeys:ResourceKeys}, ResourceId=DefaultDataGridCellStyleKey}" TargetType="DataGridCell">
        <Style.Setters>
            <!--  Define foreground color of displayed text based on level of log entry  -->
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.CellForegroundBrushKey}}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.CellForegroundBrushKey}}" />
            <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.CellBackgroundBrushKey}}" />
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.CellBorderBrushKey}}" />
        </Style.Setters>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="true" />
                    <Condition Property="IsSelected" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.SelectedFocusedCellForegroundBrushKey}}" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.SelectedFocusedCellBackgroundBrushKey}}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.SelectedFocusedCellBorderBrushKey}}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="false" />
                    <Condition Property="IsSelected" Value="true" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static reskeys:ResourceKeys.SelectedCellForegroundBrushKey}}" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.SelectedCellBackgroundBrushKey}}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.SelectedCellBorderBrushKey}}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>